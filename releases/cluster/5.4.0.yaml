apiVersion: kaas.mirantis.com/v1alpha1
kind: ClusterRelease
metadata:
  name: ucp-5-4-0-3-3-0-beta1
spec:
  lcmType: ucp
  version: 5.4.0+3.3.0-beta1
  description: |
    kubernetes: 1.17.2
    containerd: 1.2.13
    docker-engine: ce-stable-19.03.7
    coredns: 1.5.0
    etcd: v3.4.3
    calico: v3.12.0
    istio: 1.1.0
    kubernetes-dashboard: 0.2.15
  releaseNotes:
  - version: 5.3.0
    notes:
    - text: Public Beta release, UCP 3.3.0-beta1, Kubernetes v1.17.2
  helm:
    repositories:
    - name: kaas
      url: core/helm
    - name: stacklight
      url: stacklight/helm
    - name: kaas-bm
      url: bm/helm
    - name: ceph
      url: ceph/helm
    releases:
    - name: istio
      chart: kaas/istio
      namespace: istio-system
      version: 1.7.0
      values:
        gateways:
        istio-egressgateway:
          enabled: true
        global:
          controlPlaneSecurityEnabled: true
          multiCluster:
            enabled: true
          podDNSSearchNamespaces:
          - global
          - '[[ valueOrDefault .DeploymentMeta.Namespace "default" ]].global'
        grafana:
          enabled: false
        istiocoredns:
          enabled: true
        security:
          selfSigned: false
        sidecarInjectorWebhook:
          enabled: true
    - name: kubernetes-dashboard
      chart: kaas/kubernetes-dashboard
      namespace: kube-system
      version: 1.7.0
      values:
        image:
          tag: v2.0.0-rc7-9
        kubernetes-dashboard-proxy:
          initImage:
            tag: 1.7.0
    - chart: kaas/metallb
      name: metallb
      namespace: metallb-system
      version: 1.7.0
      values:
        configInline:
          address-pools:
          - addresses:
            - 192.168.66.240-192.168.66.250
            name: default
            protocol: layer2
    - name: stacklight
      chart: stacklight/stacklight
      version: 0.1.2-mcp-194
      namespace: stacklight
      requiresPersistentVolumes: true
      values:
        createHelmBundleCRD: true
        tillerImage: lcm/helm/tiller:v2.16.5-4
        helmControllerImage: lcm/lcm-controller:v0.2.0-92-g86a000e
    - name: ceph-controller
      chart: ceph/ceph-controller
      version: 0.1.0-mcp-60
      namespace: ceph
      values:
        images:
          cephController:
            repository: ceph/mcp/ceph-operator
            tag: v1.0.2-20200414100935
    - name: local-volume-provisioner
      chart: kaas-bm/local-volume-provisioner
      version: 0.1.0-mcp-353
      namespace: default
      values: {}
    - name: metrics-server
      version: 1.7.0
      chart: kaas/metrics-server
      namespace: kube-system
      values:
        image:
          tag: v0.3.6-1
      required: true
    - name: descheduler
      version: 1.7.0
      chart: kaas/descheduler
      namespace: kube-system
      values:
        image:
          tag: v0.8.0
      required: true
  agent:
    version: v0.2.0-92-g86a000e
    downloadURL: lcm/bin/lcm-agent/v0.2.0-92-g86a000e/lcm-agent
    sha256: 62fb18e422ede2152e3cc873a0d157072a069b00ca895090956c1563c68007de
  images:
    helmController: lcm/lcm-controller:v0.2.0-92-g86a000e
    tiller: lcm/helm/tiller:v2.16.5-4
  machineTypes:
    worker:
    - &downloadLcmAnsible
      name: download lcm ansible
      params:
        path: /root/lcm-ansible-v0.2.0-80-g88db857-1
        url: lcm/bin/lcm-ansible/v0.2.0-80-g88db857/lcm-ansible.tar.gz
        sha256: 276b9d581b88a1ea8a4a1f00eca29fb0af337b25ff9650daa433bb9370f01fa8
      runner: downloader
      version: "1"
      phase: prepare
    - &downloadAnsibleDocker
      name: download ansible docker
      params:
        path: /root/lcm-ansible-v0.2.0-80-g88db857-1/ansible-docker
        url: lcm/bin/ansible-docker/v0.3.5-76-g86bf35e/ansible-docker.tar.gz
        sha256: 41bb592ed2a23d7990f17bb8a8ec35c94fa87508a81da72a4482b2b365f6f68d
      runner: downloader
      version: "1"
      phase: prepare
    - &setup
      name: setup
      params:
        script: /root/lcm-ansible-v0.2.0-80-g88db857-1/setup.sh
      runner: bash
      version: "1"
      phase: prepare
    - &preDownload
      name: pre download
      params:
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.2.0-80-g88db857-1/inventory/inventory-docker.tmpl
        playbook: /root/lcm-ansible-v0.2.0-80-g88db857-1/download_ucp.yml
        ucp_pre_pull_images: "true"
        controlNodeIP: "{{ .ControlNodeIP }}"
        isDedicatedMaster: "{{ .IsDedicatedMaster }}"
        ucp_version: docker/ucp:3.3.0-beta1
        docker_engine_version: "{ Debian: ce-stable-19.03.8, RedHat: ee-test-19.03.8 }"
      phase: prepare
      runner: ansible
      version: "1"
    - &deploy
      name: deploy
      params:
        playbook: /root/lcm-ansible-v0.2.0-80-g88db857-1/reconcile.yml
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.2.0-80-g88db857-1/inventory/inventory-docker.tmpl
        controlNodeIP: "{{ .ControlNodeIP }}"
        isDedicatedMaster: "{{ .IsDedicatedMaster }}"
        ucp_version: docker/ucp:3.3.0-beta1
        docker_engine_version: "{ Debian: ce-stable-19.03.8, RedHat: ee-test-19.03.8 }"
      runner: ansible
      version: "1"
      phase: deploy
    control:
    - *downloadLcmAnsible
    - *downloadAnsibleDocker
    - *setup
    - *preDownload
    - *deploy
