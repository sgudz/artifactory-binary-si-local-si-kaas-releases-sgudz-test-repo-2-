apiVersion: kaas.mirantis.com/v1alpha1
kind: ClusterRelease
metadata:
  name: mke-5-15-0-3-3-6
spec:
  lcmType: ucp
  version: 5.15.0+3.3.6
  description: |
    kubernetes: 1.18.10
    containerd: 1.3.4
    docker-engine: ee-stable-19.03.14
    coredns: 1.7.0
    etcd: v3.4.3
    calico: v3.14.1
  releaseNotes:
  - version: 5.15.0
    notes:
    - text: MKE 3.3.6, Kubernetes v1.18.10
  helm:
    releases:
    - name: metallb
      chartURL: core/helm/metallb-1.20.2.tgz
      version: 1.20.2
      namespace: metallb-system
      values:
        configInline:
          address-pools:
          - addresses:
            - 192.168.66.240-192.168.66.250
            name: default
            protocol: layer2
    - name: stacklight
      chartURL: stacklight/helm/stacklight-0.1.2-mcp-464.tgz
      version: 0.1.2-mcp-464
      namespace: stacklight
      requiresPersistentVolumes: true
      requires:
      - local-volume-provisioner
      localVolumes:
      - name: elasticsearch-data
        bindMounts:
        - volPerNode: 1
      - name: prometheus-data
        bindMounts:
        - volPerNode: 1
      - name: alertmanager-data
        bindMounts:
        - volPerNode: 1
      - name: postgresql-db
        bindMounts:
        - volPerNode: 1
      values:
        createHelmBundleCRD: true
        tillerImage: lcm/helm/tiller:v2.16.11-40
        helmControllerImage: lcm/lcm-controller:v0.2.0-327-g5676f4e3
        logging:
          enabled: false
      required: true
    - name: ceph-controller
      chartURL: ceph/helm/ceph-operator-1.0.0-mcp-242.tgz
      version: 1.0.0-mcp-242
      namespace: ceph
      values: {}
    - name: local-volume-provisioner
      chartURL: bm/helm/local-volume-provisioner-1.0.5-mcp.tgz
      version: 1.0.5-mcp
      namespace: kube-system
      values: {}
    - name: metrics-server
      chartURL: core/helm/metrics-server-1.20.2.tgz
      version: 1.20.2
      namespace: kube-system
      values:
        image:
          tag: v0.3.6-1
      required: true
    - name: descheduler
      chartURL: core/helm/descheduler-1.20.2.tgz
      version: 1.20.2
      namespace: kube-system
      values:
        image:
          tag: v0.8.0
      required: true
    - name: managed-lcm-api
      chartURL: core/helm/managed-lcm-api-1.20.2.tgz
      version: 1.20.2
      namespace: default
      values: {}
      required: true
    - name: storage-discovery
      chartURL: core/helm/storage-discovery-1.20.2.tgz
      version: 1.20.2
      namespace: storage-discovery
      values:
        image:
          tag: 1.20.2
  agent:
    version: v0.2.0-327-g5676f4e3
    downloadURL: lcm/bin/lcm-agent/v0.2.0-327-g5676f4e3/lcm-agent
    sha256: d04f115bb60be298feddeeeb47ebbb4de43d67c561c1aac502cc59e5d61b1f68
  images:
    helmController: lcm/lcm-controller:v0.2.0-327-g5676f4e3
    tiller: lcm/helm/tiller:v2.16.11-40
    ucpSourceRepo: lcm/docker
    ucpTargetRepo: mirantis
  machineTypes:
    worker:
    - &downloadLcmAnsible
      name: download lcm ansible
      params:
        path: /root/lcm-ansible-v0.6.0-19-g0004de6
        url: lcm/bin/lcm-ansible/v0.6.0-19-g0004de6/lcm-ansible.tar.gz
        sha256: 44cf4564607c9a2f3eadeeab6b068d296444c2c0251aea08c0b4f7ec8741f542
      runner: downloader
      version: "1"
      phase: prepare
    - &installProxy
      name: install proxy
      params:
        script: /root/lcm-ansible-v0.6.0-19-g0004de6/install_proxy.sh
        kaas_ubuntu_repo: kaas/ubuntu-2020-07-30-013349
      runner: bash
      version: "1"
      phase: prepare
    - &setup
      name: setup
      params:
        script: /root/lcm-ansible-v0.6.0-19-g0004de6/setup.sh
        kaas_ubuntu_repo: kaas/ubuntu-2020-07-30-013349
      runner: bash
      version: "1"
      phase: prepare
    - &preDownload
      name: pre download
      params:
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.6.0-19-g0004de6/inventory/inventory-docker.tmpl
        playbook: /root/lcm-ansible-v0.6.0-19-g0004de6/download_ucp.yml
        ucp_pre_pull_images: "true"
        controlNodeIP: "{{ .ControlNodeIP }}"
        ucp_tag: 3.3.6
        dedicated_controlplane: "{{ .IsDedicatedMaster }}"
        docker_engine_version: "{ Debian: ee-stable-19.03.14, RedHat: ee-stable-19.03.14 }"
      phase: prepare
      runner: ansible
      version: "1"
    - &deploy
      name: deploy
      params:
        playbook: /root/lcm-ansible-v0.6.0-19-g0004de6/reconcile.yml
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.6.0-19-g0004de6/inventory/inventory-docker.tmpl
        controlNodeIP: "{{ .ControlNodeIP }}"
        ucp_tag: 3.3.6
        dedicated_controlplane: "{{ .IsDedicatedMaster }}"
        docker_engine_version: "{ Debian: ee-stable-19.03.14, RedHat: ee-stable-19.03.14 }"
        ucp_custom_kube_controller_manager_flags: "--leader-elect-lease-duration=120s,--leader-elect-renew-deadline=60s"
        ucp_custom_kube_scheduler_flags: "--leader-elect-lease-duration=120s,--leader-elect-renew-deadline=60s"
      runner: ansible
      version: "1"
      phase: deploy
    control:
    - *downloadLcmAnsible
    - *installProxy
    - *setup
    - *preDownload
    - *deploy
  allowedNodeLabels:
  - key: stacklight
    value: enabled
    displayName: Stacklight
