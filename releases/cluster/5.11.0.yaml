apiVersion: kaas.mirantis.com/v1alpha1
kind: ClusterRelease
metadata:
  name: mke-5-11-0-3-3-4
spec:
  lcmType: ucp
  version: 5.11.0+3.3.4
  description: |
    kubernetes: 1.18.10
    containerd: 1.3.4
    docker-engine: ee-stable-19.03.14
    coredns: 1.7.0
    etcd: v3.4.3
    calico: v3.14.1
  releaseNotes:
  - version: 5.11.0
    notes:
    - text: MKE 3.3.4, Kubernetes v1.18.10
  helm:
    repositories:
    - name: kaas
      url: core/helm
    - name: stacklight
      url: stacklight/helm
    - name: kaas-bm
      url: bm/helm
    - name: ceph
      url: ceph/helm
    releases:
    - chart: kaas/metallb
      name: metallb
      namespace: metallb-system
      version: 1.16.0
      values:
        configInline:
          address-pools:
          - addresses:
            - 192.168.66.240-192.168.66.250
            name: default
            protocol: layer2
    - name: stacklight
      chart: stacklight/stacklight
      version: 0.1.2-mcp-398
      namespace: stacklight
      requiresPersistentVolumes: true
      requires:
      - local-volume-provisioner
      localVolumes:
      - name: elasticsearch-data
        bindMounts:
        - volPerNode: 1
      - name: prometheus-data
        bindMounts:
        - volPerNode: 1
      - name: alertmanager-data
        bindMounts:
        - volPerNode: 1
      - name: postgresql-db
        bindMounts:
        - volPerNode: 1
      values:
        createHelmBundleCRD: true
        tillerImage: lcm/helm/tiller:v2.16.11-40
        helmControllerImage: lcm/lcm-controller:v0.2.0-221-g32bd5f56
        logging:
          enabled: false
      required: true
    - name: ceph-controller
      chart: ceph/ceph-operator
      version: 1.0.0-mcp-111
      namespace: ceph
      values:
        images:
          cephController:
            repository: ceph/mcp/ceph-controller
            tag: v1.0.0-20210120004212
    - name: local-volume-provisioner
      chart: kaas-bm/local-volume-provisioner
      version: 1.0.4-mcp
      namespace: kube-system
      values: {}
    - name: metrics-server
      version: 1.16.0
      chart: kaas/metrics-server
      namespace: kube-system
      values:
        image:
          tag: v0.3.6-1
      required: true
    - name: descheduler
      version: 1.16.0
      chart: kaas/descheduler
      namespace: kube-system
      values:
        image:
          tag: v0.8.0
      required: true
    - name: managed-lcm-api
      version: 1.16.0
      chart: kaas/managed-lcm-api
      namespace: default
      values: {}
      required: true
  agent:
    version: v0.2.0-221-g32bd5f56
    downloadURL: lcm/bin/lcm-agent/v0.2.0-221-g32bd5f56/lcm-agent
    sha256: 810f8f96c53e48a1246cc5f61c194eed7587256cd9a647412697b85a9329dc2d
  images:
    helmController: lcm/lcm-controller:v0.2.0-221-g32bd5f56
    tiller: lcm/helm/tiller:v2.16.11-40
    ucpSourceRepo: lcm/docker
    ucpTargetRepo: mirantis
  machineTypes:
    worker:
    - &downloadLcmAnsible
      name: download lcm ansible
      params:
        path: /root/lcm-ansible-v0.2.0-394-g599b2a1
        url: lcm/bin/lcm-ansible/v0.2.0-394-g599b2a1/lcm-ansible.tar.gz
        sha256: 17dba7ca09b107e2bf76442691a182d338832ff511260ebc5648a97b57293a1d
      runner: downloader
      version: "1"
      phase: prepare
    - &setup
      name: setup
      params:
        script: /root/lcm-ansible-v0.2.0-394-g599b2a1/setup.sh
        kaas_ubuntu_repo: kaas/ubuntu-2020-07-30-013349
      runner: bash
      version: "1"
      phase: prepare
    - &preDownload
      name: pre download
      params:
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.2.0-394-g599b2a1/inventory/inventory-docker.tmpl
        playbook: /root/lcm-ansible-v0.2.0-394-g599b2a1/download_ucp.yml
        ucp_pre_pull_images: "true"
        controlNodeIP: "{{ .ControlNodeIP }}"
        ucp_tag: 3.3.4
        dedicated_controlplane: "{{ .IsDedicatedMaster }}"
        docker_engine_version: "{ Debian: ee-stable-19.03.14, RedHat: ee-stable-19.03.14 }"
      phase: prepare
      runner: ansible
      version: "1"
    - &deploy
      name: deploy
      params:
        playbook: /root/lcm-ansible-v0.2.0-394-g599b2a1/reconcile.yml
        ansible: /usr/bin/ansible-playbook
        inventoryTemplate: /root/lcm-ansible-v0.2.0-394-g599b2a1/inventory/inventory-docker.tmpl
        controlNodeIP: "{{ .ControlNodeIP }}"
        ucp_tag: 3.3.4
        dedicated_controlplane: "{{ .IsDedicatedMaster }}"
        docker_engine_version: "{ Debian: ee-stable-19.03.14, RedHat: ee-stable-19.03.14 }"
      runner: ansible
      version: "1"
      phase: deploy
    control:
    - *downloadLcmAnsible
    - *setup
    - *preDownload
    - *deploy
  allowedNodeLabels:
  - key: stacklight
    value: enabled
    displayName: Stacklight
